name: Release

on:
  push:
    tags:
      - v*.*.*

env:
  CARGO_TERM_COLOR: always

jobs:
  build-binaries:
    name: Build release artifacts (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          components: rustfmt, clippy
          override: true
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}-release
      - name: Cargo build
        run: cargo build --release --workspace --target ${{ matrix.target }}
      - name: Package binaries (unix)
        if: runner.os != 'Windows'
        run: |
          tar -czf edge-policy-hub-${{ matrix.target }}.tar.gz -C target/${{ matrix.target }}/release .
      - name: Package binaries (windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path target/${{ matrix.target }}/release/* -DestinationPath edge-policy-hub-${{ matrix.target }}.zip
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: edge-policy-hub-${{ matrix.target }}
          path: |
            edge-policy-hub-${{ matrix.target }}.tar.gz
            edge-policy-hub-${{ matrix.target }}.zip
          if-no-files-found: ignore

  release:
    name: Create GitHub release
    needs:
      - build-binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: '*'
          merge-multiple: true
          path: dist
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
